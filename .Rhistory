penguins_clean <-cleaning_penguin_columns(penguins_raw)
colnames(penguins_clean)
# Using our functions from the functions script
#Install renv
install.packages("renv")
renv::init()  # initializing renv
renv::snapshot()# Create a snapshot of the libraries in use => in rev.lock file
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(palmerpenguins)
library(janitor)
library(here)
source(here("functions", "cleaning.R")) # sourcing function
print(here("functions", "cleaning.R"))
setwd("C:/Users/Candela/OneDrive - Nexus365/Biology - Yr 3/Coding Sessions/PenguinProject")
# Removing columns with pipe function:
#penguins_clean <- penguins_raw %>%
#select(-Comments) %>%
#select(-starts_with("delta"))
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(palmerpenguins)
library(janitor)
library(here)
source(here("functions", "cleaning.R")) # sourcing function
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(palmerpenguins)
library(janitor)
library(here)
source(here("functions", "cleaning.R")) # sourcing function
clean_column_names <- function(penguins_data) {
penguins_data %>%
clean_names()
}
remove_columns <- function(penguins_data, column_names) {
penguins_data %>%
select(-starts_with(column_names))
}
shorten_species <- function(penguins_data) {
penguins_data %>%
mutate(species = case_when(
species == "Adelie Penguin (Pygoscelis adeliae)" ~ "Adelie",
species == "Chinstrap penguin (Pygoscelis antarctica)" ~ "Chinstrap",
species == "Gentoo penguin (Pygoscelis papua)" ~ "Gentoo"
))
}
remove_empty_columns_rows <- function(penguins_data) {
penguins_data %>%
remove_empty(c("rows", "cols"))
}
remove_NA <- function(penguins_data) {
penguins_data %>%
na.omit()
}
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(palmerpenguins)
library(janitor)
library(here)
source(here("functions", "cleaning.R")) # sourcing function
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(palmerpenguins)
library(janitor)
library(here)
source(here("functions", "cleaning.R")) # sourcing function
#Load data
penguins_raw <- read.csv(here("data","penguins_raw.csv")
# Making a function to clean data
cleaning_penguin_columns <- function(raw_data){ # making new function
# Removing columns with pipe function:
penguins_clean <- penguins_raw %>%
select(-Comments) %>%
select(-starts_with("delta"))
# Cleaning column names:
penguins_clean <- penguins_raw %>%
select(-Comments) %>%
select(-starts_with("delta")) %>%
clean_names() #unifies col names
# Save clean data - CODE
#write.csv(penguins_clean, here("data", "penguins_clean.csv"))
# Making a function to clean data
cleaning_penguin_columns <- function(raw_data){ # making new function
raw_data %>% # generic - any raw data goes here
clean_names() %>%
select(-comments) %>%
select(-starts_with("delta"))
}
penguins_clean <-cleaning_penguin_columns(penguins_raw)
colnames(penguins_clean)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(palmerpenguins)
library(janitor)
library(here)
source(here("functions", "cleaning.R")) # sourcing function
print(here("functions", "cleaning.R"))
source("functions/cleaning.R", echo = TRUE)
# Cleaning column names:
penguins_clean <- penguins_raw %>%
select(-Comments) %>%
select(-starts_with("delta")) %>%
clean_names() #unifies col names
# Save clean data - CODE
write.csv(penguins_clean, here("data", "penguins_clean.csv"))
# Making a function to clean data
cleaning_penguin_columns <- function(raw_data){ # making new function
raw_data %>% # generic - any raw data goes here
clean_names() %>%
select(-comments) %>%
select(-starts_with("delta"))
}
penguins_clean <-cleaning_penguin_columns(penguins_raw)
colnames(penguins_clean)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(palmerpenguins)
library(janitor)
library(here)
source(here("functions", "cleaning.R")) # sourcing function
---------------------------
##
## Script name: cleaning.r
##
## Purpose of script:
##      # A file of functions for cleaning the Palmer Penguins dataset
##
## Author: Candela Ferrer Diez - adapted from Dr. Lydia France
##
## Date Adapted: 16/10/2024 (Created: 2024-10-01)
##
##
## ---------------------------
##
## Notes:
##
##
## ---------------------------
# A function to make sure the column names are cleaned up,
# e.g lower case and snake case
clean_column_names <- function(raw_data) {
raw_data %>%
clean_names()
}
---------------------------
##
## Script name: cleaning.r
##
## Purpose of script:
##      # A file of functions for cleaning the Palmer Penguins dataset
##
## Author: Candela Ferrer Diez - adapted from Dr. Lydia France
##
## Date Adapted: 16/10/2024 (Created: 2024-10-01)
##
##
## ---------------------------
##
## Notes:
##
##
## ---------------------------
# A function to make sure the column names are cleaned up,
# e.g lower case and snake case
clean_column_names <- function(raw_data) {
raw_data %>%
clean_names()
}
clean_column_names <- function(raw_data) {
raw_data %>%
clean_names()
}
print("clean_column_names function is defined")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(palmerpenguins)
library(janitor)
library(here)
source(here("functions", "cleaning.R")) # sourcing function
ls()
---------------------------
##
## Script name: cleaning.r
##
## Purpose of script:
##      # A file of functions for cleaning the Palmer Penguins dataset
##
## Author: Candela Ferrer Diez - adapted from Dr. Lydia France
##
## Date Adapted: 16/10/2024 (Created: 2024-10-01)
##
##
## ---------------------------
##
## Notes:
##
##
## ---------------------------
library(janitor)
---------------------------
##
## Script name: cleaning.r
##
## Purpose of script:
##      # A file of functions for cleaning the Palmer Penguins dataset
##
## Author: Candela Ferrer Diez - adapted from Dr. Lydia France
##
## Date Adapted: 16/10/2024 (Created: 2024-10-01)
##
##
## ---------------------------
##
## Notes:
##
##
## ---------------------------
library(janitor)
---------------------------
##
## Script name: cleaning.r
##
## Purpose of script:
##      # A file of functions for cleaning the Palmer Penguins dataset
##
## Author: Candela Ferrer Diez - adapted from Dr. Lydia France
##
## Date Adapted: 16/10/2024 (Created: 2024-10-01)
##
##
## ---------------------------
##
## Notes:
##
##
## --------------------------
library(janitor)
library(janitor)
# A function to make sure the column names are cleaned up,
# e.g lower case and snake case
clean_column_names <- function(raw_data) {
raw_data %>%
clean_names()
}
# A function to remove columns based on a vector of column names
remove_columns <- function(raw_data, column_names) {
raw_data %>%
select(-starts_with(column_names))
}
# A function to make sure the species names are shortened
shorten_species <- function(raw_data) {
raw_data %>%
mutate(species = case_when(
species == "Adelie Penguin (Pygoscelis adeliae)" ~ "Adelie",
species == "Chinstrap penguin (Pygoscelis antarctica)" ~ "Chinstrap",
species == "Gentoo penguin (Pygoscelis papua)" ~ "Gentoo"
))
}
# A function to remove any empty columns or rows
remove_empty_columns_rows <- function(raw_data) {
raw_data %>%
remove_empty(c("rows", "cols"))
}
# A function to remove rows which contain NA values
remove_NA <- function(raw_data) {
raw_data %>%
na.omit()
}
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(palmerpenguins)
library(janitor)
library(here)
source(here("functions", "cleaning.R")) # sourcing function
str(penguins_data)
str(penguins_raw)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(palmerpenguins)
library(janitor)
library(here)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(palmerpenguins)
library(janitor)
library(here)
# To write data to csv
write.csv(penguins_raw, here("data", "penguins_raw.csv"))
#Load data
penguins_raw <- read.csv(here("data","penguins_raw.csv")
# Looking at data
head(penguins_raw) #first 6 rows
head(penguins_raw) #first 6 rows
colnames(penguins_raw) # show col names
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(palmerpenguins)
library(janitor)
library(here)
# To write data to csv
write.csv(penguins_raw, here("data", "penguins_raw.csv"))
#Load data
penguins_raw <- read.csv(here("data","penguins_raw.csv
# Looking at data
head(penguins_raw) #first 6 rows
colnames(penguins_raw) # show col names
# To write data to csv
write.csv(penguins_raw, here("data", "penguins_raw.csv"))
#Load data
penguins_raw <- read.csv(here("data","penguins_raw.csv)
# Looking at data
head(penguins_raw) #first 6 rows
colnames(penguins_raw) # show col names
# To write data to csv
write.csv(penguins_raw, here("data", "penguins_raw.csv"))
#Load data
penguins_raw <- read.csv(here("data","penguins_raw.csv))
# Looking at data
head(penguins_raw) #first 6 rows
colnames(penguins_raw) # show col names
# To write data to csv
write.csv(penguins_raw, here("data", "penguins_raw.csv"))
#Load data
penguins_raw <- read.csv(here("data","penguins_raw.csv))
# To write data to csv
write.csv(penguins_raw, here("data", "penguins_raw.csv"))
#Load data
penguins_raw <- read.csv(here("data","penguins_raw.csv"))
# To write data to csv
write.csv(penguins_raw, here("data", "penguins_raw.csv"))
# Load data
penguins_raw <- read.csv(here("data","penguins_raw.csv"))
# Check data
head(penguins_raw) #first 6 rows
colnames(penguins_raw) # show col names
# Cleaning column names:
penguins_clean <- penguins_raw %>%
select(-Comments) %>%
select(-starts_with("delta")) %>%
clean_names() #unifies col names
# Save clean data - CODE
write.csv(penguins_clean, here("data", "penguins_clean.csv"))
# Making a function to clean data
cleaning_penguin_columns <- function(raw_data){ # making new function
raw_data %>% # generic - any raw data goes here
clean_names() %>%
select(-comments) %>%
select(-starts_with("delta"))
}
penguins_clean <-cleaning_penguin_columns(penguins_raw)
colnames(penguins_clean)
# Using our functions from the functions script
source(here("functions", "cleaning.R"), echo = TRUE)
# Using our functions from the functions script
file.create(here("functions", "cleaning.R"))
# A function to make sure the column names are cleaned up,
# eg lower case and snake case
clean_column_names <- function(penguins_data) {
penguins_data %>%
clean_names()
}
# A function to remove columns based on a vector of column names
remove_columns <- function(penguins_data, column_names) {
penguins_data %>%
select(-starts_with(column_names))
}
# A function to make sure the species names are shortened
shorten_species <- function(penguins_data) {
penguins_data %>%
mutate(species = case_when(
species == "Adelie Penguin (Pygoscelis adeliae)" ~ "Adelie",
species == "Chinstrap penguin (Pygoscelis antarctica)" ~ "Chinstrap",
species == "Gentoo penguin (Pygoscelis papua)" ~ "Gentoo"
))
}
# A function to remove any empty columns or rows
remove_empty_columns_rows <- function(penguins_data) {
penguins_data %>%
remove_empty(c("rows", "cols"))
}
# A function to remove rows which contain NA values
remove_NA <- function(penguins_data) {
penguins_data %>%
na.omit()
}
# A function to remove rows which contain NA values
remove_NA <- function(penguins_data) {
penguins_data %>%
na.omit()
}
# Using our functions from the functions script
file.create(here("functions", "cleaning.R"))
source(here("functions", "cleaning.R"), echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(palmerpenguins)
library(janitor)
library(here)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(palmerpenguins)
library(janitor)
library(here)
# To write data to csv
write.csv(penguins_raw, here("data", "penguins_raw.csv"))
#Load data
penguins_raw <- read.csv(here("data","penguins_raw.csv
# Looking at data
head(penguins_raw) #first 6 rows
colnames(penguins_raw) # show col names
# To write data to csv
write.csv(penguins_raw, here("data", "penguins_raw.csv"))
#Load data
penguins_raw <- read.csv(here("data","penguins_raw.csv"))
# Looking at data
head(penguins_raw) #first 6 rows
colnames(penguins_raw) # show col names
# Removing columns
#penguins_noComments <- select(penguins_raw, -Comments) # removes comments column
#penguins_onlyComments <- select(penguins_raw, Comments) # removes everything but comments
#penguins_onlyComments <- select(penguins_raw, -starts_with("Delta")) # removes everything but comments
# Removing columns with pipe function:
penguins_clean <- penguins_raw %>%
select(-Comments) %>%
select(-starts_with("delta"))
# Cleaning column names:
penguins_clean <- penguins_raw %>%
select(-Comments) %>%
select(-starts_with("delta")) %>%
clean_names() #unifies col names
# Save clean data - CODE
write.csv(penguins_clean, here("data", "penguins_clean.csv"))
# Making a function to clean data
cleaning_penguin_columns <- function(raw_data){ # making new function
raw_data %>% # generic - any raw data goes here
clean_names() %>%
select(-comments) %>%
select(-starts_with("delta"))
}
penguins_clean <-cleaning_penguin_columns(penguins_raw)
colnames(penguins_clean)
# Using our functions from the functions script
#Install renv
install.packages("renv")
renv::init()  # initializing renv
renv::snapshot()# Create a snapshot of the libraries in use => in rev.lock file
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(palmerpenguins)
library(janitor)
library(here)
# To write data to csv
write.csv(penguins_raw, here("data", "penguins_raw.csv"))
#Load data
penguins_raw <- read.csv(here("data","penguins_raw.csv"))
# Looking at data
head(penguins_raw) #first 6 rows
colnames(penguins_raw) # show col names
# Removing columns
#penguins_noComments <- select(penguins_raw, -Comments) # removes comments column
#penguins_onlyComments <- select(penguins_raw, Comments) # removes everything but comments
#penguins_onlyComments <- select(penguins_raw, -starts_with("Delta")) # removes everything but comments
# Removing columns with pipe function:
penguins_clean <- penguins_raw %>%
select(-Comments) %>%
select(-starts_with("delta"))
# Cleaning column names:
penguins_clean <- penguins_raw %>%
select(-Comments) %>%
select(-starts_with("delta")) %>%
clean_names() #unifies col names
# Save clean data - CODE
write.csv(penguins_clean, here("data", "penguins_clean.csv"))
# Making a function to clean data
cleaning_penguin_columns <- function(raw_data){ # making new function
raw_data %>% # generic - any raw data goes here
clean_names() %>%
select(-comments) %>%
select(-starts_with("delta"))
}
penguins_clean <-cleaning_penguin_columns(penguins_raw)
colnames(penguins_clean)
# Using our functions from the functions script
#Install renv
install.packages("renv")
renv::init()  # initializing renv
renv::snapshot()# Create a snapshot of the libraries in use => in rev.lock file
renv::diagnostics() # run diagnostics
renv::restore() # Restore the snapshot to install the libraries
# Using our functions from the functions script
#creating a file
#file.create(here("functions", "cleaning.R"))
#sourcing file
source(here("functions", "cleaning.R"), echo = TRUE
# Using our functions from the functions script
#creating a file
#file.create(here("functions", "cleaning.R"))
#sourcing file
source(here("functions", "cleaning.R"), echo = TRUE)
library(Sleuth3) # for the data
renv::init()
renv::init()
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(palmerpenguins)
library(janitor)
library(here)
# To write data to csv
write.csv(penguins_raw, here("data", "penguins_raw.csv"))
#Load data
penguins_raw <- read.csv(here("data","penguins_raw.csv"))
